sudo: false # don't need root access on Travis-CI (builds faster without sudo!)

language: node_js # elm is installed from npm (see install below)
node_js: node # use "latest" version of Node.js

os: # test on *both* Linux and OSX to ensure compatibility
  - linux
  - osx # if your project does not *need* OSX compatibility, comment this line.

cache:
  directories: # so subsequent builds run faster
    - elm-stuff/build-artifacts
    - elm-stuff/packages
    - test/elm-stuff/build-artifacts
    - test/elm-stuff/packages
    - sysconfcpus

before_install:
  - if [ ${TRAVIS_OS_NAME} == "osx" ];
    then brew update; brew install nvm; mkdir ~/.nvm; export NVM_DIR=~/.nvm; source $(brew --prefix nvm)/nvm.sh;
    fi
  - | # epic build time improvement - 10 mins >> 5 sec! see https://git.io/vQcqz
    if [ ! -d sysconfcpus/bin ];
    then
      git clone https://github.com/obmarg/libsysconfcpus.git;
      cd libsysconfcpus;
      ./configure --prefix=$TRAVIS_BUILD_DIR/sysconfcpus;
      make && make install;
      cd ..;
    fi

install: # install elm and elm-test at *specific* versions
  - npm install -g elm@0.18.0 elm-test@0.18.12 elm-format@exp
  - elm package install --yes # install main project dependencies
  - cd test                   # change into /test directory to install more deps
  - elm package install --yes # install test dependencies
  - cd ..                     # change back into root project directory

before_script: # print some useful debug info
  - uname -a # print the *exact* operating system/kernel version
  - cat /proc/cpuinfo # debug processesor info
  - node --version # print Node.js version in Travis Log for debugging
  - npm --version  # print npm version in Travis Log for debugging.

script:
  - elm-format --validate PhotoGroove.elm
  - elm-test
