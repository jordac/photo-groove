sudo: false # don't need root access on Travis-CI (builds faster without sudo!)

language: node_js # elm is installed from npm (see install below)
node_js: node     # use "latest" version of Node.js

os: # test on *both* Linux and OSX to ensure compatibility
  - linux # defaults to Ubuntu Linux
  # - osx # if your project does not *need* OSX compatibility, remove this line.

env:
  - ELM_VERSION=0.18.0 ELM_TEST=0.18.12

cache:
  directories: # so subsequent builds run faster
    - elm-stuff/build-artifacts
    - elm-stuff/packages
    - tests/elm-stuff/build-artifacts # elm-test init creates a "tests/" dir
    - tests/elm-stuff/packages        # cache files that haven't changed
    - sysconfcpus
    - $HOME/.npm # https://stackoverflow.com/a/42523517/1148249

before_install:
  - uname -a       # print the *exact* operating system/kernel version
  # - if [ ${TRAVIS_OS_NAME} == "osx" ];
  #   then brew update; brew install nvm; mkdir ~/.nvm; export NVM_DIR=~/.nvm; source $(brew --prefix nvm)/nvm.sh;
  #   fi
  - | # build time improvement - 10 mins >> 5 sec! see https://git.io/vQcqz
    if [ ! -d sysconfcpus/bin ];
    then
      git clone https://github.com/obmarg/libsysconfcpus.git;
      cd libsysconfcpus;
      ./configure --prefix=$TRAVIS_BUILD_DIR/sysconfcpus;
      make && make install;
      cd ..;
    fi

install: # install specific versions of elm & elm-test
  - npm install -g elm@$ELM_VERSION elm-test@$ELM_TEST elm-format@exp
  # the next 3 lines are courtesy of @rtfeldman https://git.io/vbj0j
  - mv $(npm config get prefix)/bin/elm-make $(npm config get prefix)/bin/elm-make-old
  - printf "#\041/bin/bash\n\necho \"Running elm-make with sysconfcpus -n 2\"\n\n$TRAVIS_BUILD_DIR/sysconfcpus/bin/sysconfcpus -n 2 elm-make-old \"\$@\"" > $(npm config get prefix)/bin/elm-make
  - chmod +x $(npm config get prefix)/bin/elm-make
  - travis_retry elm package install --yes # install main project dependencies
  - pwd


script:
  - elm-format --validate PhotoGroove.elm # lint / format-check main file
  - elm-test --verbose                    # run the tests!
